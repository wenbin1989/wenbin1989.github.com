<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: nginx | 技术男儿裆自强]]></title>
  <link href="http://geeksavetheworld.com/blog/categories/nginx/atom.xml" rel="self"/>
  <link href="http://geeksavetheworld.com/"/>
  <updated>2013-10-10T17:22:47+08:00</updated>
  <id>http://geeksavetheworld.com/</id>
  <author>
    <name><![CDATA[wenbin wang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[gentoo下使用nginx+fastcgi部署trac]]></title>
    <link href="http://geeksavetheworld.com/blog/2013/10/07/trac-plus-nginx-plus-fastcgi-plus-gentoo/"/>
    <updated>2013-10-07T23:14:00+08:00</updated>
    <id>http://geeksavetheworld.com/blog/2013/10/07/trac-plus-nginx-plus-fastcgi-plus-gentoo</id>
    <content type="html"><![CDATA[<p>首先，运行</p>

<pre><code>emerge --ask nginx trac
</code></pre>

<p>安装所需应用。</p>

<p>需注意确保trac的USES标记中含有fastcgi与vhosts。
如果没有vhosts，trac安装完成后会自动调用webapp-config在localhost虚拟目录下创建trac应用，而本人更倾向于根据需要手动安装。</p>

<p>运行</p>

<pre><code>webapp-config -I -h trac trac 1.0.1
</code></pre>

<p>将trac安装在名为trac的虚拟目录下。
再运行</p>

<pre><code>trac-admin /path/to/project initenv
</code></pre>

<p>按提示创建trac环境。
详细介绍及trac环境的目录结构见<a href="http://trac.edgewall.org/wiki/TracEnvironment">wiki</a>。</p>

<p>发布静态资源，以便通过nginx直接提供，提高效率：</p>

<pre><code>trac-admin /path/to/project deploy /var/www/trac
</code></pre>

<p>如配置为多项目，则需将<code>/var/www/trac/htdocs</code>下<code>site</code>与<code>common</code>目录移至<code>/var/www/trac/htdocs/project</code>下。</p>

<p>以nginx+fastcgi方式部署trac时，前端nginx做转发，后端fastcgi运行方式有两种：</p>

<ul>
<li>利用spawn-fcgi等服务，管理运行trac虚拟目录下cgi-bin/trac.fcgi脚本。</li>
<li>以fcgi协议运行<a href="http://trac.edgewall.org/wiki/TracStandalone">tracd</a>服务。</li>
</ul>


<p>由于使用tracd配置最为便捷，其他人提及的又相对较少，所以本文主要介绍后者。</p>

<!-- more -->


<p>运行</p>

<pre><code>tracd --protocol=fcgi /path/to/project
</code></pre>

<p>进行测试，出现以下错误：</p>

<pre><code>ImportError: No module named flup.server.fcgi
</code></pre>

<p>查看错误代码，发现是因为当tracd运行协议为fcgi、scgi等时，实现依赖flup，而emeger安装trac时并没有自动安装该依赖。
运行</p>

<pre><code>emerge --ask flup
</code></pre>

<p>安装flup后，tracd正常运行，无错误发生。</p>

<p>编辑tracd配置文件(<code>/etc/conf.d/tracd</code>)，修改<code>TRACD_OPTS</code>段落为:</p>

<pre><code>TRACD_OPTS="--protocol=fcgi --env-parent-dir /path/to" (多项目)
</code></pre>

<p>或</p>

<pre><code>TRACD_OPTS="--protocol=fcgi -s /path/to/project" (单项目)
</code></pre>

<p>更多tracd选项请运行<code>tracd --help</code>查看。</p>

<p>启动tracd服务：</p>

<pre><code>/etc/init.d/tracd start
</code></pre>

<p>设置tracd开机自动运行：</p>

<pre><code>rc-update add tracd default
</code></pre>

<p>最后，配置nginx虚拟目录：</p>

<p>```
server {</p>

<pre><code>listen   80; ## listen for ipv4; this line is default and implied
server_name trac.example.com;

access_log /var/log/nginx/trac.access_log main;
error_log /var/log/nginx/trac.error_log notice;

# 单项目静态资源配置，多项目环境只需下一段
# it makes sense to serve static resources through Nginx
location ~ /chrome/ {
    rewrite /chrome/(.*) /$1 break;
    root /var/www/trac/htdocs;
    access_log        off;
    expires           max;
}

# 多项目静态资源配置，单项目环境只需上一段
# it makes sense to serve static resources through Nginx
location ~ /(.*?)/chrome/ {
    rewrite /(.*?)/chrome/(.*) /$1/$2 break;
    root /var/www/trac/htdocs;
    access_log        off;
    expires           max;
}

location / {
    fastcgi_pass localhost:8000;
    include fastcgi_params;
    fastcgi_param  SCRIPT_NAME        "";
    fastcgi_param  PATH_INFO          $fastcgi_script_name;
}
</code></pre>

<p>}
```</p>

<p>注意，trac官方wiki中的配置方法为：
```
server {</p>

<pre><code>...
# (Or ``^/some/prefix/(.*)``.
if ($uri ~ ^/(.*)) {
    set $path_info /$1;
}
...
location / {
    fastcgi_pass localhost:8000;
    include fastcgi_params;
    fastcgi_param  SCRIPT_NAME        "";
    fastcgi_param  PATH_INFO          $path_info;
}
</code></pre>

<p>}
```
正常情况下nginx在传递请求参数时会做url encode，但该段配置用正则表达式匹配请求参数，从而使变量$1、即$path_info不会被encode。
这种情况下，请求中存在中文的资源会无法正确解析，PATH_INFO设置为$fastcgi_script_name则表现正常。</p>

<p>重启nginx，部署完成。</p>
]]></content>
  </entry>
  
</feed>
